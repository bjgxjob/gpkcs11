;
; This file is part of GPKCS11. 
; (c) 1999-2001 TC TrustCenter GmbH 
;
; GPKCS11 is free software; you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation; either version 2, or (at your option)
; any later version.
;  
; GPKCS11 is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
;  
; You should have received a copy of the GNU General Public License
; along with GPKCS11; see the file COPYING.  If not, write to the Free
; Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111, USA.  
;
; RCSID:       $Id$
; Source:      $Source$
; Last Delta:  $Date$ $Revision$ $Author$
; State:       $State$ $Locker$
; NAME:        pkcs11_init.scm
; SYNOPSIS:    -
; DESCRIPTION: define the symbols used for pkcs11 specific names and values
; FILES:       -
; SEE/ALSO:    -
; AUTHOR:      lbe
; BUGS:        -

;; set the prompt to something nice
(set-repl-prompt! "pkcs11> ")

;; get some stuff I need
(load "rassoc.scm")

;; apply a single argument function on all elements of a list
;; returning the list of the results
(define (on-all func list)
  (cond ((eq? list '()) '())
	(#t (cons (apply func (cons (car list) '())) 
		  (on-all func (cdr list))))
	)
  )

; create a attibute value tupel
(define (make-attrib type value)
  (list (attr-2-cka type) value)
  )

(define (ckm-2-mech mech-num)
  (let ((entry (assoc mech-num ck-mechanism-names)))
    (cond ((eq? entry #f) "undefined")
	  (#t (cdr entry))
	  )
    ))

(define (mech-2-ckm name)
  (let ((entry (rassoc name ck-mechanism-names)))
    (cond ((eq? entry #f) #f)
	  (#t (car entry))
	  )
    ))

(define (cka-2-attr attr-num)
  (let ((entry (assoc attr-num ck-attrib-names)))
    (cond ((eq? entry #f) "undefined")
	  (#t (cdr entry))
	  )
    ))

(define (attr-2-cka name)
  (let ((entry (rassoc name ck-attrib-names)))
    (cond ((eq? entry #f) #f)
	  (#t (car entry))
	  )
    ))

(define (return-code-2-ckr name)
  (let ((entry (rassoc name ck-return-code-names)))
    (cond ((eq? entry #f) #f)
	  (#t (car entry))
	  )
    ))

(define (ckr-2-return-code ret-num)
  (let ((entry (assoc ret-num ck-return-code-names)))
    (cond ((eq? entry #f) "undefined")
	  (#t (cdr entry))
	  )
    ))

(define (key-type-2-ckk name)
  (let ((entry (rassoc name ck-key-type-names)))
    (cond ((eq? entry #f) #f)
	  (#t (car entry))
	  )
    ))

(define (ckk-2-key-type type-num)
  (let ((entry (assoc type-num ck-key-type-names)))
    (cond ((eq? entry #f) "undefined")
	  (#t (cdr entry))
	  )
    ))

(define (obj-type-2-cko name)
  (let ((entry (rassoc name ck-object-type-names)))
    (cond ((eq? entry #f) #f)
	  (#t (car entry))
	  )
    ))

(define (cko-2-obj-type type-num)
  (let ((entry (assoc type-num ck-object-type-names)))
    (cond ((eq? entry #f) "undefined")
	  (#t (cdr entry))
	  )
    ))

;; defines the flags directly into the namespace 
(define CKF_TOKEN_PRESENT                  #x00000001)
(define CKF_REMOVABLE_DEVICE               #x00000002)
(define CKF_HW_SLOT                        #x00000004)
(define CKF_RNG                            #x00000001)
(define CKF_WRITE_PROTECTED                #x00000002)
(define CKF_LOGIN_REQUIRED                 #x00000004)
(define CKF_USER_PIN_INITIALIZED           #x00000008)
(define CKF_RESTORE_KEY_NOT_NEEDED         #x00000020)
(define CKF_CLOCK_ON_TOKEN                 #x00000040)
(define CKF_PROTECTED_AUTHENTICATION_PATH  #x00000100)
(define CKF_DUAL_CRYPTO_OPERATIONS         #x00000200)
(define CKF_RW_SESSION                     #x00000002)
(define CKF_SERIAL_SESSION                 #x00000004)
(define CKF_HW                             #x00000001)
(define CKF_ENCRYPT                        #x00000100)
(define CKF_DECRYPT                        #x00000200)
(define CKF_DIGEST                         #x00000400)
(define CKF_SIGN                           #x00000800)
(define CKF_SIGN_RECOVER                   #x00001000)
(define CKF_VERIFY                         #x00002000)
(define CKF_VERIFY_RECOVER                 #x00004000)
(define CKF_GENERATE                       #x00008000)
(define CKF_GENERATE_KEY_PAIR              #x00010000)
(define CKF_WRAP                           #x00020000)
(define CKF_UNWRAP                         #x00040000)
(define CKF_DERIVE                         #x00080000)
(define CKF_EXTENSION                      #x80000000)
(define CKF_LIBRARY_CANT_CREATE_OS_THREADS #x00000001)
(define CKF_OS_LOCKING_OK                  #x00000002)
(define CKF_DONT_BLOCK                     #x00000001)
 
;;{{{ ck-mechanism-names
(define ck-mechanism-names
  '((#x0 .    "CKM_RSA_PKCS_KEY_PAIR_GEN")
    (#x1 .    "CKM_RSA_PKCS")
    (#x2 .    "CKM_RSA_9796")
    (#x3 .    "CKM_RSA_X_509")
    (#x4 .    "CKM_MD2_RSA_PKCS")
    (#x5 .    "CKM_MD5_RSA_PKCS")
    (#x6 .    "CKM_SHA1_RSA_PKCS")
    (#x10 .   "CKM_DSA_KEY_PAIR_GEN")
    (#x11 .   "CKM_DSA")
    (#x12 .   "CKM_DSA_SHA1")
    (#x20 .   "CKM_DH_PKCS_KEY_PAIR_GEN")
    (#x21 .   "CKM_DH_PKCS_DERIVE")
    (#x100 .  "CKM_RC2_KEY_GEN")
    (#x101 .  "CKM_RC2_ECB")
    (#x102 .  "CKM_RC2_CBC")
    (#x103 .  "CKM_RC2_MAC")
    (#x104 .  "CKM_RC2_MAC_GENERAL")
    (#x105 .  "CKM_RC2_CBC_PAD")
    (#x110 .  "CKM_RC4_KEY_GEN")
    (#x111 .  "CKM_RC4")
    (#x120 .  "CKM_DES_KEY_GEN")
    (#x121 .  "CKM_DES_ECB")
    (#x122 .  "CKM_DES_CBC")
    (#x123 .  "CKM_DES_MAC")
    (#x124 .  "CKM_DES_MAC_GENERAL")
    (#x125 .  "CKM_DES_CBC_PAD")
    (#x130 .  "CKM_DES2_KEY_GEN")
    (#x131 .  "CKM_DES3_KEY_GEN")
    (#x132 .  "CKM_DES3_ECB")
    (#x133 .  "CKM_DES3_CBC")
    (#x134 .  "CKM_DES3_MAC")
    (#x135 .  "CKM_DES3_MAC_GENERAL")
    (#x136 .  "CKM_DES3_CBC_PAD")
    (#x140 .  "CKM_CDMF_KEY_GEN")
    (#x141 .  "CKM_CDMF_ECB")
    (#x142 .  "CKM_CDMF_CBC")
    (#x143 .  "CKM_CDMF_MAC")
    (#x144 .  "CKM_CDMF_MAC_GENERAL")
    (#x145 .  "CKM_CDMF_CBC_PAD")
    (#x200 .  "CKM_MD2")
    (#x201 .  "CKM_MD2_HMAC")
    (#x202 .  "CKM_MD2_HMAC_GENERAL")
    (#x210 .  "CKM_MD5")
    (#x220 .  "CKM_SHA_1")
    (#x311 .  "CKM_CAST3_ECB")
    (#x312 .  "CKM_CAST3_CBC")
    (#x313 .  "CKM_CAST3_MAC")
    (#x314 .  "CKM_CAST3_MAC_GENERAL")
    (#x315 .  "CKM_CAST3_CBC_PAD")
    (#x320 .  "CKM_CAST5_KEY_GEN")
    (#x320 .  "CKM_CAST128_KEY_GEN")
    (#x321 .  "CKM_CAST5_ECB")
    (#x321 .  "CKM_CAST128_ECB")
    (#x322 .  "CKM_CAST5_CBC")
    (#x322 .  "CKM_CAST128_CBC")
    (#x323 .  "CKM_CAST5_MAC")
    (#x323 .  "CKM_CAST128_MAC")
    (#x324 .  "CKM_CAST5_MAC_GENERAL")
    (#x324 .  "CKM_CAST128_MAC_GENERAL")
    (#x325 .  "CKM_CAST5_CBC_PAD")
    (#x325 .  "CKM_CAST128_CBC_PAD")
    (#x330 .  "CKM_RC5_KEY_GEN")
    (#x331 .  "CKM_RC5_ECB")
    (#x332 .  "CKM_RC5_CBC")
    (#x333 .  "CKM_RC5_MAC")
    (#x334 .  "CKM_RC5_MAC_GENERAL")
    (#x335 .  "CKM_RC5_CBC_PAD")
    (#x340 .  "CKM_IDEA_KEY_GEN")
    (#x341 .  "CKM_IDEA_ECB")
    (#x342 .  "CKM_IDEA_CBC")
    (#x343 .  "CKM_IDEA_MAC")
    (#x344 .  "CKM_IDEA_MAC_GENERAL")
    (#x345 .  "CKM_IDEA_CBC_PAD")
    (#x350 .  "CKM_GENERIC_SECRET_KEY_GEN")
    (#x360 .  "CKM_CONCATENATE_BASE_AND_KEY")
    (#x362 .  "CKM_CONCATENATE_BASE_AND_DATA")
    (#x363 .  "CKM_CONCATENATE_DATA_AND_BASE")
    (#x364 .  "CKM_XOR_BASE_AND_DATA")
    (#x365 .  "CKM_EXTRACT_KEY_FROM_KEY")
    (#x370 .  "CKM_SSL3_PRE_MASTER_KEY_GEN")
    (#x371 .  "CKM_SSL3_MASTER_KEY_DERIVE")
    (#x372 .  "CKM_SSL3_KEY_AND_MAC_DERIVE")
    (#x380 .  "CKM_SSL3_MD5_MAC")
    (#x381 .  "CKM_SSL3_SHA1_MAC")
    (#x390 .  "CKM_MD5_KEY_DERIVATION")
    (#x391 .  "CKM_MD2_KEY_DERIVATION")
    (#x392 .  "CKM_SHA1_KEY_DERIVATION")
    (#x3A0 .  "CKM_PBE_MD2_DES_CBC")
    (#x3A1 .  "CKM_PBE_MD5_DES_CBC")
    (#x3A2 .  "CKM_PBE_MD5_CAST_CBC")
    (#x3A3 .  "CKM_PBE_MD5_CAST3_CBC")
    (#x3A4 .  "CKM_PBE_MD5_CAST5_CBC")
    (#x3A4 .  "CKM_PBE_MD5_CAST128_CBC")
    (#x3A5 .  "CKM_PBE_SHA1_CAST5_CBC")
    (#x3A5 .  "CKM_PBE_SHA1_CAST128_CBC")
    (#x3A6 .  "CKM_PBE_SHA1_RC4_128")
    (#x3A7 .  "CKM_PBE_SHA1_RC4_40")
    (#x3A8 .  "CKM_PBE_SHA1_DES3_EDE_CBC")
    (#x3A9 .  "CKM_PBE_SHA1_DES2_EDE_CBC")
    (#x3AA .  "CKM_PBE_SHA1_RC2_128_CBC")
    (#x3AB .  "CKM_PBE_SHA1_RC2_40_CBC")
    (#x3C0 .  "CKM_PBA_SHA1_WITH_SHA1_HMAC")
    (#x400 .  "CKM_KEY_WRAP_LYNKS")
    (#x401 .  "CKM_KEY_WRAP_SET_OAEP")
    (#x1000 . "CKM_SKIPJACK_KEY_GEN")
    (#x1001 . "CKM_SKIPJACK_ECB64")
    (#x1002 . "CKM_SKIPJACK_CBC64")
    (#x1003 . "CKM_SKIPJACK_OFB64")
    (#x1004 . "CKM_SKIPJACK_CFB64")
    (#x1005 . "CKM_SKIPJACK_CFB32")
    (#x1006 . "CKM_SKIPJACK_CFB16")
    (#x1007 . "CKM_SKIPJACK_CFB8")
    (#x1008 . "CKM_SKIPJACK_WRAP")
    (#x1009 . "CKM_SKIPJACK_PRIVATE_WRAP")
    (#x100a . "CKM_SKIPJACK_RELAYX")
    (#x1010 . "CKM_KEA_KEY_PAIR_GEN")
    (#x1011 . "CKM_KEA_KEY_DERIVE")
    (#x1020 . "CKM_FORTEZZA_TIMESTAMP")
    (#x1030 . "CKM_BATON_KEY_GEN")
    (#x1031 . "CKM_BATON_ECB128")
    (#x1032 . "CKM_BATON_ECB96")
    (#x1033 . "CKM_BATON_CBC128")
    (#x1034 . "CKM_BATON_COUNTER")
    (#x1035 . "CKM_BATON_SHUFFLE")
    (#x1036 . "CKM_BATON_WRAP")
    (#x1040 . "CKM_ECDSA_KEY_PAIR_GEN")
    (#x1041 . "CKM_ECDSA")
    (#x1042 . "CKM_ECDSA_SHA1")
    (#x1060 . "CKM_JUNIPER_KEY_GEN")
    (#x1061 . "CKM_JUNIPER_ECB128")
    (#x1062 . "CKM_JUNIPER_CBC128")
    (#x1063 . "CKM_JUNIPER_COUNTER")
    (#x1064 . "CKM_JUNIPER_SHUFFLE")
    (#x1065 . "CKM_JUNIPER_WRAP")
    (#x1070 . "CKM_FASTHASH")
    (#x80000000 . "CKM_VENDOR_DEFINED")))
;;}}}

;;{{{ ck-return-code-names
(define ck-return-code-names
  '((#x0 . "CKR_OK")
    (#x1 . "CKR_CANCEL")
    (#x2 . "CKR_HOST_MEMORY")
    (#x3 . "CKR_SLOT_ID_INVALID")
    (#x5 . "CKR_GENERAL_ERROR")
    (#x6 . "CKR_FUNCTION_FAILED")
    (#x7 . "CKR_ARGUMENTS_BAD")
    (#x8 . "CKR_NO_EVENT")
    (#x9 . "CKR_NEED_TO_CREATE_THREADS")
    (#xA . "CKR_CANT_LOCK")
    (#x10 . "CKR_ATTRIBUTE_READ_ONLY")
    (#x11 . "CKR_ATTRIBUTE_SENSITIVE")
    (#x12 . "CKR_ATTRIBUTE_TYPE_INVALID")
    (#x13 . "CKR_ATTRIBUTE_VALUE_INVALID")
    (#x20 . "CKR_DATA_INVALID")
    (#x21 . "CKR_DATA_LEN_RANGE")
    (#x30 . "CKR_DEVICE_ERROR")
    (#x31 . "CKR_DEVICE_MEMORY")
    (#x32 . "CKR_DEVICE_REMOVED")
    (#x40 . "CKR_ENCRYPTED_DATA_INVALID")
    (#x41 . "CKR_ENCRYPTED_DATA_LEN_RANGE")
    (#x50 . "CKR_FUNCTION_CANCELED")
    (#x51 . "CKR_FUNCTION_NOT_PARALLEL")
    (#x54 . "CKR_FUNCTION_NOT_SUPPORTED")
    (#x60 . "CKR_KEY_HANDLE_INVALID")
    (#x62 . "CKR_KEY_SIZE_RANGE")
    (#x63 . "CKR_KEY_TYPE_INCONSISTENT")
    (#x64 . "CKR_KEY_NOT_NEEDED")
    (#x65 . "CKR_KEY_CHANGED")
    (#x66 . "CKR_KEY_NEEDED")
    (#x67 . "CKR_KEY_INDIGESTIBLE")
    (#x68 . "CKR_KEY_FUNCTION_NOT_PERMITTED")
    (#x69 . "CKR_KEY_NOT_WRAPPABLE")
    (#x6A . "CKR_KEY_UNEXTRACTABLE")
    (#x70 . "CKR_MECHANISM_INVALID")
    (#x71 . "CKR_MECHANISM_PARAM_INVALID")
    (#x82 . "CKR_OBJECT_HANDLE_INVALID")
    (#x90 . "CKR_OPERATION_ACTIVE")
    (#x91 . "CKR_OPERATION_NOT_INITIALIZED")
    (#xA0 . "CKR_PIN_INCORRECT")
    (#xA1 . "CKR_PIN_INVALID")
    (#xA2 . "CKR_PIN_LEN_RANGE")
    (#xA3 . "CKR_PIN_EXPIRED")
    (#xA4 . "CKR_PIN_LOCKED")
    (#xB0 . "CKR_SESSION_CLOSED")
    (#xB1 . "CKR_SESSION_COUNT")
    (#xB3 . "CKR_SESSION_HANDLE_INVALID")
    (#xB4 . "CKR_SESSION_PARALLEL_NOT_SUPPORTED")
    (#xB5 . "CKR_SESSION_READ_ONLY")
    (#xB6 . "CKR_SESSION_EXISTS")
    (#xB7 . "CKR_SESSION_READ_ONLY_EXISTS")
    (#xB8 . "CKR_SESSION_READ_WRITE_SO_EXISTS")
    (#xC0 . "CKR_SIGNATURE_INVALID")
    (#xC1 . "CKR_SIGNATURE_LEN_RANGE")
    (#xD0 . "CKR_TEMPLATE_INCOMPLETE")
    (#xD1 . "CKR_TEMPLATE_INCONSISTENT")
    (#xE0 . "CKR_TOKEN_NOT_PRESENT")
    (#xE1 . "CKR_TOKEN_NOT_RECOGNIZED")
    (#xE2 . "CKR_TOKEN_WRITE_PROTECTED")
    (#xF0 . "CKR_UNWRAPPING_KEY_HANDLE_INVALID")
    (#xF1 . "CKR_UNWRAPPING_KEY_SIZE_RANGE")
    (#xF2 . "CKR_UNWRAPPING_KEY_TYPE_INCONSISTENT")
    (#x100 . "CKR_USER_ALREADY_LOGGED_IN")
    (#x101 . "CKR_USER_NOT_LOGGED_IN")
    (#x102 . "CKR_USER_PIN_NOT_INITIALIZED")
    (#x103 . "CKR_USER_TYPE_INVALID")
    (#x104 . "CKR_USER_ANOTHER_ALREADY_LOGGED_IN")
    (#x105 . "CKR_USER_TOO_MANY_TYPES")
    (#x110 . "CKR_WRAPPED_KEY_INVALID")
    (#x112 . "CKR_WRAPPED_KEY_LEN_RANGE")
    (#x113 . "CKR_WRAPPING_KEY_HANDLE_INVALID")
    (#x114 . "CKR_WRAPPING_KEY_SIZE_RANGE")
    (#x115 . "CKR_WRAPPING_KEY_TYPE_INCONSISTENT")
    (#x120 . "CKR_RANDOM_SEED_NOT_SUPPORTED")
    (#x121 . "CKR_RANDOM_NO_RNG")
    (#x150 . "CKR_BUFFER_TOO_SMALL")
    (#x160 . "CKR_SAVED_STATE_INVALID")
    (#x170 . "CKR_INFORMATION_SENSITIVE")
    (#x180 . "CKR_STATE_UNSAVEABLE")
    (#x190 . "CKR_CRYPTOKI_NOT_INITIALIZED")
    (#x191 . "CKR_CRYPTOKI_ALREADY_INITIALIZED")
    (#x1A0 . "CKR_MUTEX_BAD")
    (#x1A1 . "CKR_MUTEX_NOT_LOCKED")
    (#x80000000 . "CKR_VENDOR_DEFINED")
  ))
;;}}}

;;{{{ ck-attrib-names
(define ck-attrib-names
  '((#x00000000 . "CKA_CLASS")
    (#x00000001 . "CKA_TOKEN")
    (#x00000002 . "CKA_PRIVATE")
    (#x00000003 . "CKA_LABEL")
    (#x00000010 . "CKA_APPLICATION")
    (#x00000011 . "CKA_VALUE")
    (#x00000080 . "CKA_CERTIFICATE_TYPE")
    (#x00000081 . "CKA_ISSUER")
    (#x00000082 . "CKA_SERIAL_NUMBER")
    (#x00000100 . "CKA_KEY_TYPE")
    (#x00000101 . "CKA_SUBJECT")
    (#x00000102 . "CKA_ID")
    (#x00000103 . "CKA_SENSITIVE")
    (#x00000104 . "CKA_ENCRYPT")
    (#x00000105 . "CKA_DECRYPT")
    (#x00000106 . "CKA_WRAP")
    (#x00000107 . "CKA_UNWRAP")
    (#x00000108 . "CKA_SIGN")
    (#x00000109 . "CKA_SIGN_RECOVER")
    (#x0000010A . "CKA_VERIFY")
    (#x0000010B . "CKA_VERIFY_RECOVER")
    (#x0000010C . "CKA_DERIVE")
    (#x00000110 . "CKA_START_DATE")
    (#x00000111 . "CKA_END_DATE")
    (#x00000120 . "CKA_MODULUS")
    (#x00000121 . "CKA_MODULUS_BITS")
    (#x00000122 . "CKA_PUBLIC_EXPONENT")
    (#x00000123 . "CKA_PRIVATE_EXPONENT")
    (#x00000124 . "CKA_PRIME_1")
    (#x00000125 . "CKA_PRIME_2")
    (#x00000126 . "CKA_EXPONENT_1")
    (#x00000127 . "CKA_EXPONENT_2")
    (#x00000128 . "CKA_COEFFICIENT")
    (#x00000130 . "CKA_PRIME")
    (#x00000131 . "CKA_SUBPRIME")
    (#x00000132 . "CKA_BASE")
    (#x00000160 . "CKA_VALUE_BITS")
    (#x00000161 . "CKA_VALUE_LEN")
    (#x00000162 . "CKA_EXTRACTABLE")
    (#x00000163 . "CKA_LOCAL")
    (#x00000164 . "CKA_NEVER_EXTRACTABLE")
    (#x00000165 . "CKA_ALWAYS_SENSITIVE")
    (#x00000170 . "CKA_MODIFIABLE")
    (#x00000180 . "CKA_ECDSA_PARAMS")
    (#x00000181 . "CKA_EC_POINT")
    (#x80000000 . "CKA_VENDOR_DEFINED")
  ))
;;}}}


  ;;{{{ ck-key-type-names
(define ck-key-type-names
  '((#x00000000 . "CKK_RSA")
    (#x00000001 . "CKK_DSA")
    (#x00000002 . "CKK_DH")
    (#x00000003 . "CKK_ECDSA")
    (#x00000005 . "CKK_KEA")
    (#x00000010 . "CKK_GENERIC_SECRET")
     (#x00000011 . "CKK_RC2")
     (#x00000012 . "CKK_RC4")
     (#x00000013 . "CKK_DES")
     (#x00000014 . "CKK_DES2")
     (#x00000015 . "CKK_DES3")
     (#x00000016 . "CKK_CAST")
     (#x00000017 . "CKK_CAST3")
     (#x00000018 . "CKK_CAST5")
     (#x00000018 . "CKK_CAST128") /* CAST128=CAST5 */
     (#x00000019 . "CKK_RC5")
     (#x0000001A . "CKK_IDEA")
     (#x0000001B . "CKK_SKIPJACK")
     (#x0000001C . "CKK_BATON")
     (#x0000001D . "CKK_JUNIPER")
     (#x0000001E . "CKK_CDMF")
     (#x80000000 . "CKK_VENDOR_DEFINED")
     ))
;;}}}

;;{{{ ck-object-type-names
(define ck-object-type-names 
  '((#x00000000 . "CKO_DATA")
    (#x00000001 . "CKO_CERTIFICATE")
    (#x00000002 . "CKO_PUBLIC_KEY")
    (#x00000003 . "CKO_PRIVATE_KEY")
    (#x00000004 . "CKO_SECRET_KEY")
    (#x80000000 . "CKO_VENDOR_DEFINED")
    ))
;;}}}
 


